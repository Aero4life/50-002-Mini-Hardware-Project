module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    //output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output io_led[3][8],  // LEDs on IO Shield
    //input io_dip [3][8]     // DIP switches on IO Shield
    output a,                  //taken as an output because it outputs to the PCB as an input to the PCB
    output b,
    output c_in,
    input sum,
    input carryIn
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    .rst(rst){
    //blinker myBLinker;
    fsm state = {S000,S001,S010,S011,S100,S101,S110,S111,ERROR};
    dff counter[30];
    }
  }
    
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    counter.d=0;
    a=counter.q[27];
    b=counter.q[26];
    c_in=counter.q[25];
    counter.d=counter.q+1;
    //led = c{rst,rst,rst,rst,rst,myBLinker.a,myBLinker.b,myBLinker.c};             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags    
    avr_rx = bz;            // not using serial port
    
    io_led ={8h00,8h00,8h00};    // turn LEDs off
    //io_led[0][5]=1;
    //io_seg = 8hff;          // turn segments off
    //io_sel = 4hf;           // select no digits 
    
    
    
    
    case(state.q){
    
      state.S000:
        io_led ={8h0,8h0,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==0&&counter.q[26]==0&&counter.q[25]==0){
          
          if(carryIn==0&&sum==0){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S001;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
      state.S001:
        io_led ={8h1,8h1,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==0&&counter.q[26]==0&&counter.q[25]==1){
          if (counter.q[24]==1){
            if(carryIn==0&&sum==1){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S010;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
        }
      state.S010:
        io_led ={8h2,8h2,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==0&&counter.q[26]==1&&counter.q[25]==0){
          if (counter.q[24]==1){  
          if(carryIn==0&&sum==1){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S011;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
         }
      state.S011:
        io_led ={8h3,8h3,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==0&&counter.q[26]==1&&counter.q[25]==1){
          if (counter.q[24]==1){
            if(carryIn==1&&sum==0){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S100;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
          }
      state.S100:
        io_led ={8h4,8h4,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
        if(counter.q[27]==1&&counter.q[26]==0&&counter.q[25]==0){
          if (counter.q[24]==1){
            if(carryIn==0&&sum==1){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S101;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
        }
      state.S101:
        io_led ={8h5,8h5,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==1&&counter.q[26]==0&&counter.q[25]==1){
          if (counter.q[24]==1){  
          if(carryIn==1&&sum==0){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S110;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
        }
      state.S110:
        io_led ={8h6,8h6,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==1&&counter.q[26]==1&&counter.q[25]==0){
          if (counter.q[24]==1){  
          if(carryIn==1&&sum==0){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S111;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
        }
      state.S111:
        io_led ={8h7,8h7,c{5h00,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==1&&counter.q[26]==1&&counter.q[25]==1){
          if (counter.q[24]==1){ 
           if(carryIn==1&&sum==1){
              //io_led ={8h00,8b00000001,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              state.d=state.S000;
            }
            else{
              state.d=state.ERROR;
              //io_led ={8h0,8h0,c{5h00,counter.q[29],counter.q[28],counter.q[27]}};
              }
          }
        }
      state.ERROR:
        io_led ={8x{counter.q[22]},8x{counter.q[22]},c{5h0,counter.q[27],counter.q[26],counter.q[25]}};
        if(counter.q[27]==0&&counter.q[26]==0&&counter.q[25]==0){
          state.d=state.S000; 
         }
          
    }
  }
}